C51 COMPILER V9.60.7.0   MAIN                                                              05/23/2025 14:21:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <delay.h>
   3          #include <keyscan.h>   
   4          #include <LCD1602.h>    
   5          #include <matrix.h>
   6          
   7          #define MAX_INPUT_LEN 16  // ??????(??LCD1602??16??)
   8          
   9          // ??????
  10          unsigned char get_key() {
  11   1          unsigned char key_num = matrixkey();
  12   1          switch(key_num) {
  13   2              case 1:  return '1';
  14   2              case 2:  return '2';
  15   2              case 3:  return '3';
  16   2              case 4:  return '4';
  17   2              case 5:  return '5';
  18   2              case 6:  return '6';
  19   2              case 7:  return '7';
  20   2              case 8:  return '8';
  21   2              case 9:  return '9';
  22   2              case 10: return '0';
  23   2              case 11: return '(';
  24   2              case 12: return ')';
  25   2              case 13: return '.';
  26   2              case 14: return '=';
  27   2              case 15: return 'd';  // ??
  28   2              case 16: return 'C';  // ??(?'A'??????'C')
  29   2              case 17: return '+';
  30   2              case 18: return '-';
  31   2              case 19: return '*';
  32   2              case 20: return '/';
  33   2              default: return 0xFF;
  34   2          }
  35   1      }
  36          
  37          void main() {
  38   1          unsigned char input[MAX_INPUT_LEN] = {0};  // ?????
  39   1          unsigned char pos = 0;                     // ??????
  40   1          float result;
  41   1          unsigned char key_val;
  42   1          unsigned char result_str[16];              // ????????
  43   1      
  44   1          LCD_Init();
  45   1          LCD_Clear();
  46   1      
  47   1          while (1) {
  48   2              key_val = get_key();
  49   2              
  50   2              if (key_val != 0xFF) {
  51   3                  delay(20);  // ????
  52   3      
  53   3                  /*----- ????? -----*/
  54   3                  if (key_val == 'C') {  // ????
C51 COMPILER V9.60.7.0   MAIN                                                              05/23/2025 14:21:34 PAGE 2   

  55   4                      pos = 0;
  56   4                      input[0] = '\0';
  57   4                      LCD_Clear();
  58   4                  }
  59   3                  else if (key_val == 'd' && pos > 0) {  // ????
  60   4                      input[--pos] = '\0';
  61   4                      LCD_ShowString(1, 1, "                "); // ?????
  62   4                      LCD_ShowString(1, 1, input);             // ??????
  63   4                  }
  64   3                  else if (key_val == '=') {  // ????
  65   4                      if (pos > 0) {
  66   5                          result = jisuan(input);
  67   5                          float2char(result, result_str, sizeof(result_str));
  68   5                          LCD_ShowString(2, 1, "                "); // ?????
  69   5                          LCD_ShowString(2, 1, result_str);         // ????
  70   5                      }
  71   4                  }
  72   3                  /*----- ?????? -----*/
  73   3                  else if (pos < MAX_INPUT_LEN-1) {  
  74   4                      input[pos++] = key_val;
  75   4                      input[pos] = '\0';
  76   4                      LCD_ShowChar(1, pos, key_val);  // ???????
  77   4                  }
  78   3      
  79   3                  while (matrixkey() != 0);  // ??????
  80   3                  delay(20);                // ????
  81   3              }
  82   2          }
  83   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
